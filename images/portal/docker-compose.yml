version: '3.2'
services:
    # On sections environment,
    # If comment start with R
    #   It means this environment is Required
    # Else
    #   It's optionnal
    portal:
        image: coopengo/portal:${VERSION}
        build:
            context: .
            dockerfile: docker/portal/Dockerfile
        container_name: ${NETWORK_NAME}-portal
        networks:
            - main
        entrypoint:
            - ep
        command:
            - server
    gateway:
        # Le containeur doit être accessible via nginx ou un outil similaire
        image: coopengo/gateway:${VERSION}
        build:
            context: .
            dockerfile: docker/gateway/Dockerfile
        container_name: ${NETWORK_NAME}-gateway
        networks:
            - main 
        volumes:
            - type: volume
              source: doc
              target: /workspace/coog-api
              read_only: true
        depends_on:
            - mongo
        command:
            - npm
            - start
        environment:
            ###################################
            # ----------PARAMETRAGE---------- #
            ###################################
            
            # ----------FILTRE URLS---------- #
            WHITELIST: ""                                # R URLs des connections authorisées, séparé par des virgules.
            COOG_PORTAL_URL: localhost:5000              # R URL du serveur déployant portal
             
            # -------------MONGO------------- #
            MONGO_HOST: ${NETWORK_NAME}-mongo            # R URL du serveur mongo
            MONGO_PORT: 27017                            # R Port utilisé pour la connection a mongo
            MONGO_DB_NAME: coog-gateway                  # O Nom de la base de donnée mongo à utilisé par Gateway

            # --------------JWT-------------- #
            JWT_ENCRYPTION: secret                       # R Chaine de caractère utilisé pour le hashage JWT
            JWT_EXPIRATION: 3600                         # R Durée de vie du JWT

            # -------------COOG-------------- #
            COOG_WEB_TOKEN: 123456                       # R A récupérer après avoir lancé Coog et initier un Jeton
            COOG_API_URL: ${NETWORK_NAME}-web:3000       # R URL du serveur déployant API V1
            COOG_API_URL_V2: ${NETWORK_NAME}-api:3000    # R URL du serveur déployant API V2

            ####################################
            # -----------CONNECTION----------- #
            ####################################

            # -------------BASIC-------------- #
            COOG_MODULE: "true"                          # O Basic auth via COOG

            # -----------PASSPORT------------- #
            # ------------OAUTH2-------------- #
            GOOGLE_MODULE: "false"                       # O Google OAuth2 activation
            GOOGLE_CLIENT_ID:                            # O Id de l'application google
            GOOGLE_CLIENT_SECRET:                        # O Hash secret de l'application google

            FACEBOOK_MODULE: "false"                     # O Facebook OAuth2
            FACEBOOK_CLIENT_ID:                          # O Id de l'application facebook
            FACEBOOK_CLIENT_SECRET:                      # O Hash secret de l'application facebook

            FORCEDOTCOM_MODULE: "false"                  # O Force OAuth2 (Salesforce, Force, Database)
            FORCEDOTCOM_CLIENT_ID:                       # O Id de l'application force
            FORCEDOTCOM_CLIENT_SECRET:                   # O Hash secret de l'application force
    api:
        image: coopengo/api:${VERSION}
        build:
            context: .
            dockerfile: docker/api/Dockerfile
        container_name: ${NETWORK_NAME}-api
        networks:
            - main
        volumes: 
            # Ce volume permet l'acces de la doc API a gateway
            # le container api est le container qui contient les données
            - type: volume 
              source: doc
              target: /workspace/api
              consistency: delegated
        depends_on:
            - mongo
        command:
            - npm
            - start
        environment:
            ###################################
            # ----------PARAMETRAGE---------- #
            ###################################
            
            # ------------COOG--------------- #
            COOG_HOST: ${NETWORK_NAME}-coog-server       # R URL du serveur déployant Coog
            COOG_PORT: 8000                              # R Port de connection à coog
            COOG_DB_NAME: generated                      # R Nom de la base de donnée Coog
            COOG_PROTOCOL: http                          # R Protocol de connection à utilisé
            COOG_WEB_TOKEN: coog-token                   # R Token utilisé pour la connection a Coog

            # -------------MONGO------------- #
            MONGO_HOST: pierre-mongo                     # R URL du serveur déployant Mongo
            MONGO_DB_PROTOCOL: mongodb                   # R Protocol de connection a Mongo,
                                                         #   à supprimer prochainement car mongodb est le protocol standard
            MONGO_DB_NAME:                               # O Nom de la base de données mongo a utiliser, default: coog-api-V2
            MONGO_DB_USER:                               # O Utilisateur de connection à mongo si l'accès est protégé
            MONGO_DB_PASSWORD:                           # O Mot de passe utilisateur mongo
    mongo:
        image: mongo
        container_name: ${NETWORK_NAME}-mongo
        networks:
            - main
networks:
    main:
        external:
            name: ${NETWORK_NAME} # Default = utilisateur courant
volumes:
    # Volume utilisé pour le partage de la doc
    doc:
